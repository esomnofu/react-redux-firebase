{"version":3,"sources":["components/layouts/Signedinlinks.js","store/actions/authActions.js","components/layouts/Signedoutlinks.js","components/layouts/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/Signin.js","components/auth/Signup.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","attemptSignout","getState","_ref2","getFirebase","auth","signOut","then","type","catch","err","props","profile","react_default","a","createElement","className","react_router_dom","to","onClick","e","preventDefault","initials","SignedOutLinks","state","firebase","isEmpty","authentication","displayLinks","Signedoutlinks","Signedinlinks","listStyle","marginTop","marginBottom","fontSize","padding","background","dateStyle","color","Notifications","_ref","notifications","map","notification","key","id","style","user","content","moment","time","toDate","fromNow","ProjectSummary","details","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projectSummary","project","projects_ProjectSummary","Dashboard","_this$props","this","available_projects","uid","projects_ProjectList","Notification","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","param","target","val","value","_this","setState","Object","defineProperty","handleSubmit","attemptLogin","loginError","onSubmit","htmlFor","onChange","authR","authError","credentials","signInWithEmailAndPassword","signIn","Signup","firstname","lastname","attemptSignUp","singUpError","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","firstName","lastName","console","log","singUp","CreateProject","createNewProject","history","push","userProfile","userId","add","objectSpread","authorId","Date","res","createProject","App","layouts_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","all_projects","projectReducer","rootReducer","combineReducers","projectR","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.304c2499.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\n\r\nconst SignedInLinks = (props) => {  \r\n\r\n\r\n   function handleSignout(e){\r\n        e.preventDefault();\r\n        props.attemptSignout()\r\n    }\r\n\r\n    const { profile } = props\r\n\r\n    return ( \r\n        <ul className=\"right\">\r\n            <li> <NavLink to=\"/create\"> New Project </NavLink> </li>\r\n            <li> <NavLink to=\"/\" onClick={handleSignout}> Logout </NavLink> </li>\r\n            <li> <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\"> {profile.initials} </NavLink> </li>\r\n        </ul>        \r\n     );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        attemptSignout: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        )\r\n        .then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: 'SIGNOUT_ERROR', err })\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const singUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response) => {\r\n            const uid = response.user.uid;\r\n            return firestore.collection('users').doc(uid).set({\r\n                firstName: newUser.firstname,\r\n                lastName: newUser.lastname,\r\n                initials: newUser.firstname[0] + newUser.lastname[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"signup err\");\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst SignedOutLinks = () => {\r\n    return ( \r\n        <ul className=\"right\">\r\n            <li> <NavLink to=\"/signup\"> Sign up </NavLink> </li>\r\n            <li> <NavLink to=\"/signin\"> Log in </NavLink> </li>\r\n        </ul>        \r\n     );\r\n}\r\n \r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './Signedinlinks';\r\nimport SignedOutLinks from './Signedoutlinks';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const { auth, profile }  = props\r\n    \r\n    var displayLinks = auth === true ? (<SignedOutLinks />) : (<SignedInLinks profile={profile} />)    \r\n\r\n    return ( \r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">Home View</Link>\r\n                {displayLinks}\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        auth: state.firebase.auth.isEmpty,\r\n        authentication: state.firebase,\r\n        profile: state.firebase.profile\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst listStyle = {\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    fontSize: '14px',\r\n    padding: '10px',\r\n    background: 'silver'\r\n}\r\n\r\nconst dateStyle = {\r\n    color: 'white'\r\n}\r\n\r\nconst Notifications = ({notifications}) => {\r\n    return ( \r\n            <div className=\"section\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">Notifications</span>\r\n                            <ul className=\"notifications\">\r\n                                { notifications && notifications.map(notification => {\r\n                                    return(\r\n                                            <li key={notification.id} style={listStyle}> \r\n                                                    <span className=\"pink-text\"> { notification.user } </span>\r\n                                                    <span className=\"pink-text\"> { notification.content } </span>\r\n                                                    <div className=\"note-date\" style={dateStyle}> { moment(notification.time.toDate()).fromNow() } </div>\r\n                                            </li>\r\n                                        )\r\n                                }) }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectSummary = ({details}) => {\r\n    return ( \r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{details.title}</span>\r\n                <p> Posted By {details.authorFirstName} {details.authorLastName} </p>\r\n                <p> {details.content} </p>\r\n                <p> { moment(details.createdAt.toDate()).calendar() }</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n\r\n    var projectSummary = projects && projects.map(project => {\r\n        return (\r\n            <Link to={'/project/' + project.id}  key={project.id}>\r\n                <ProjectSummary details={project}  />\r\n            </Link>\r\n        )\r\n    })\r\n\r\n    return ( \r\n            <div className=\"project-list section\">\r\n                {projectSummary}\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notifications from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    state = {  }\r\n    render() { \r\n        \r\n        const { available_projects, auth, notifications } = this.props\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        \r\n        return ( \r\n                <div className=\"dashboard container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m7\"> <ProjectList projects={available_projects} /> </div>                    \r\n                        <div className=\"col s12 m4 offset-m1\"> <Notifications notifications={notifications} /> </div>                    \r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    \r\n    return {\r\n        available_projects : state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n\r\n}\r\n\r\n \r\nexport default \r\n    compose(\r\n        connect(mapStateToProps),\r\n         firestoreConnect([\r\n             { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n             { collection: 'notifications', limit:3, orderBy: ['time', 'desc'] }\r\n         ]),\r\n        )(Dashboard)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment  from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n\r\n    const { project, auth } = props\r\n    \r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    \r\n\r\n    return ( \r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\"> { project.title } </span>\r\n                    <p> { project.content } </p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div> { project.authorFirstName } { project.authorLastName } </div>\r\n                    <div> { moment(project.createdAt.toDate()).calendar() } </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    \r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project : project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n \r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Signin extends Component {\r\n\r\n    state = {\r\n        email : '',\r\n        password: ''\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        const param = e.target.id;\r\n        const val = e.target.value;\r\n        this.setState({\r\n            [param] : val\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.attemptLogin(this.state)\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const {loginError, auth} = this.props\r\n    \r\n    if ( auth.uid ) return <Redirect to=\"/\" /> \r\n\r\n    return (\r\n      <div className=\"container\">\r\n        \r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            \r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n            \r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                </div>\r\n            \r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                </div>\r\n            \r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login Account</button>\r\n                </div>\r\n                <div className=\"red-text center\">{loginError ? <b>{loginError}</b> : null}</div>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginError : state.authR.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        attemptLogin: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { singUp } from '../../store/actions/authActions'\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        email : '',\r\n        password: '',\r\n        firstname: '',\r\n        lastname: ''\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        const param = e.target.id;\r\n        const val = e.target.value;\r\n        this.setState({\r\n            [param] : val\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.attemptSignUp(this.state)\r\n     }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const { auth, singUpError } = this.props\r\n\r\n    if( auth.uid ) return <Redirect to=\"/\" />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        \r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            \r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n            \r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                </div>\r\n            \r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                </div>\r\n\r\n                \r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstname\">First Name</label>\r\n                    <input type=\"text\" id=\"firstname\" onChange={this.handleChange} />\r\n                </div>\r\n                \r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastname\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastname\" onChange={this.handleChange} />\r\n                </div>\r\n            \r\n                <div className=\"input-field\">\r\n                    <button className=\"btn blue lighten-1 z-depth-0\">Create Account</button>\r\n                </div>\r\n                \r\n                <div className=\"red-text center\">{singUpError ? <b>{singUpError}</b> : null}</div>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        singUpError: state.authR.authError\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        attemptSignUp: (newUser) => dispatch(singUp(newUser))       \r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n\r\n    state = {\r\n        title : '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const param = e.target.id;\r\n        const val = e.target.value;\r\n        this.setState({\r\n            [param] : val\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createNewProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n    \r\n    const { auth } = this.props\r\n    \r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        \r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            \r\n            <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n            \r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Project Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                </div>\r\n            \r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange} />\r\n                </div>\r\n            \r\n                <div className=\"input-field\">\r\n                    <button className=\"btn green lighten-1 z-depth-0\">Add Project</button>\r\n                </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createNewProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        //make the async call here...\r\n\r\n        //initialize firestore\r\n        const firestore = getFirestore();\r\n        \r\n        const userProfile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: userProfile.firstName,\r\n            authorLastName: userProfile.lastName,\r\n            authorId: userId,\r\n            createdAt: new Date()\r\n        })\r\n        .then(\r\n            (res) => {\r\n                //continue with dispatch\r\n                dispatch({ type: 'CREATE_PROJECT', project: project })\r\n              }\r\n        )\r\n        .catch(\r\n            (err) => {\r\n                 console.log(\"Firebase Error is: \", err);\r\n                 dispatch({ type: 'CREATE_PROJECT_ERROR', err: err })\r\n            }\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layouts/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport Signin from './components/auth/Signin';\nimport Signup from './components/auth/Signup';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <br />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={Signin} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        // LOGIN AUTH\r\n        // LOGIN AUTH\r\n        // LOGIN AUTH\r\n\r\n        case 'LOGIN_ERROR':\r\n            console.log(\"Login Failed...\");\r\n            return {\r\n                ...state,\r\n                authError: 'login failed'\r\n            }\r\n            \r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        // LOGOUT AUTH\r\n        // LOGOUT AUTH\r\n        // LOGOUT AUTH\r\n\r\n        case 'SIGNOUT_ERROR':\r\n            console.log(\"SIGNOUT_ERROR...\");\r\n            return {\r\n                ...state,\r\n            }\r\n            \r\n        case 'SIGNOUT_SUCCESS':\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        // SIGNUP AUTH\r\n        // SIGNUP AUTH\r\n        // SIGNUP AUTH\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        \r\n        case 'SIGNUP_ERROR':\r\n            console.log(\"Sign up Error!!!\");\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n            \r\n        \r\n            \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default authReducer","const initState = {\r\n    all_projects : [\r\n        {id : 1, title: 'Number One Project', content: 'just some dummy content one' },\r\n        {id : 2, title: 'Number Two Project', content: 'just some dummy content two' },\r\n        {id : 3, title: 'Number Three Project', content: 'just some dummy content three' },\r\n        {id : 4, title: 'Number Four Project', content: 'just some dummy content four' },\r\n        {id : 5, title: 'Number Five Project', content: 'just some dummy content five' }\r\n    ]\r\n}\r\n\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'CREATE_PROJECT':\r\n            console.log(\"Project Created! \", action.project);\r\n            return state;\r\n\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log(\"Project Creation Error \", action.err);\r\n            return state;\r\n\r\n        case 'EDIT PROJECT':\r\n            //HJFSBSS\r\n        break;\r\n\r\n        case 'DELETE_PROJECT':\r\n            //HJFSSSFFS\r\n        break;\r\n        \r\n        default:\r\n            // console.log(\"Default project Reducer Case\");\r\n            return state;            \r\n    }\r\n\r\n}\r\n\r\nexport default projectReducer","import { combineReducers } from 'redux'\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    authR: authReducer,\r\n    projectR: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\n\r\n\r\nexport default rootReducer;","import firebase from 'firebase'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyCNu0739ezgu7_tyoZFLZGI6OrSTE3fPd8\",\r\n    authDomain: \"ninjafirebase-10561.firebaseapp.com\",\r\n    databaseURL: \"https://ninjafirebase-10561.firebaseio.com\",\r\n    projectId: \"ninjafirebase-10561\",\r\n    storageBucket: \"ninjafirebase-10561.appspot.com\",\r\n    messagingSenderId: \"245382264638\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots:true })\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk  from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\n\n\n// thunk for async calls\n// fireStore\n//  \nconst store = createStore(rootReducer, \n    compose( \n            applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n            reduxFirestore(firebaseConfig),\n            reactReduxFirebase(firebaseConfig, {useFirestoreForProfile: true, userProfile: 'users',  attachAuthIsReady: true }) \n        )\n    );\n\nstore.firebaseAuthIsReady.then( () => {\n    ReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}